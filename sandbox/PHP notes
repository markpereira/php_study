short open tags vs php tags?
	standard tags to make it portable.

=>> Array
integer indexed collection of objects.

Associative Array
object indexed collection of objects.(index by label)
key - value pair.

=>> Null and empty:
- 'Empty' is the leading cause of bugs in PHP code.

==> Type Juggling and casting

	- String
	- int, integer
	- float
	- array
	- bool, boolean

	php website has rules around how to use this.

	<?php $count2 = (string) $count; ?><br />
	=> change takes place as it's being assigned. not a permanent assignment.
	=> using settype will allow the change of type.


==> Constants

	- useful for saving data that's fixed. i.e root location of image files 

==> Switch statements
	
	- best used for compact logic. i.e. when you know there are a certain amount of things you need to list off, use switch statements.

==> For loops, While loops and foreach loops.

	- foreach loops are tailor made for arrays.
	- use foreach loops for arrays before using other two.

==> Continue

	used inside the loop to skip the rest of the current iteration and go directly to the condition evaluation that starts the next iteration

==> Function return values

	As much as possible try to keep "echo" statements out of the function, and use "return" values instead.

==> Multiple return values.
	if you have two  return values, use an array to return both values.
	use "list" to assign array values to variables

// -- example --
	<?php 
		function add_subt($val1, $val2) {
			$add = $val1 + $val2;
			$subt = $val1 - $val2;
			return array($add, $subt); 	 <------- array
		}

		$result_array = add_subt(10,5);
		echo "Add: " . $result_array[0] . "<br />";
		echo "Subt: " . $result_array[1] . "<br />";
	?>
//	
	

==> Common Problems & Troubleshooting

	No output at all
		- try to access an HTML Page
		- check webserver is running
		- Then try to access a basic php page
		- use php info function and check configuration information
		- make sure display errors is on and configured.

	Typos
		- mispelled code
		- missing semicolon at end of line
		- missing closing braces or closing quotes (especially nesting)
		- Case sensitive variable names
		- = vs == (diffrence is "setting" vs "checking")

	Turn on Error Reporting
		- php.ini file 
			- display_errors = ON
			- error_reporting = E_ALL

		- in php code
			- ini_set ('display_errors turned ON')
			- error_reporting (E_ALL)	

		- Types of error reporting
			- 	error_reporting(E_ALL | E_STRICT);
			- 	use the ~ to omit (E_ALL & E_DEPRECATED);		
		Full list of all the error codes and predefined constants
			http://php.net/manual/en/errorfunc.constants.php	

		- Catergory of errors
			- fatal errors
				- PHP understood code but coudln't execute it
				- probably calling undefined class or function	
			
			-syntax errors
				- PHP couldn't understand or process code
				- typo, missing semicolon etc.
				- unexpected "something" ... then tells you syntax error, file, line number where it is.	line number is off by 1 line...

			- Warnings
				- PHP found a problem but was able to recover
					- maybe tried to divide by zero if you can't and may keep processing further along the code.
					- no access permissions

			- Notices
				- PHP offering advice.
				- bugs
				- sloppy programming
				- look at making adjustments

		TURN OFF ERROR REPORTING ON PRODUCTION!!		

			- logs
				- MAC OSX
					- logs to /private/var/log/apache2/error_log
				- Windows WAMP
					- logs to C:/wamp/logs/php_error.log
					- or access logs from the WAMP menu
				- Apache
					- configured in /etc/apache2/httpd.conf

			Debugging and Troubleshooting
				- echo value of the $variable;
				- print_r($array) (print a readable array)				
				- gettype($variable);
				- var_dump($variable)
					return value and type
				- get_defined_vars(); (array of defined variables)
				- debug_backtrace (); (show backtrace/stacktrace)
				- 	no internal debugger

			Third party tools
				- Xdebug
					- http://xdebug.org
				-DBG
					- http://www.php-debugger.com/dbg
				FirePHP
					- http://www.firephp/org		

==> Building Web pages with PHP
			Getting info from users
				- URL/Links GET
				- Forms			POST
				- Cookies		COOKIE

==> Super Globals
	
				- $_GET

==> Encoding GET Values
		urlencode vs rawurlencode
			- rawurlencode the path (portion that comes before the '?')
			- rawurlencode is more compatible generally
			- newer and later version

			- urlencode is used on the query string (an early standard)

==> Encoding for HTML
			- htmlspecialchars()
			- htmlentities()

==> Including and requiring files
			-Include		
				-	Functions
				- Layout sections
				- Reusable HTML/PHP code
				- CSS and Javascript

		- include()
			- may not or won't error and will carry on processing
			- things like html footer... etc less important
		- require()		
			- will error and stop processing
			- things like functions
		- include_once()
		- require_once()
	- keeps code well organise whenever needed on a new page.		

==> Modifying Headers
		- add to the top of the page so it's the first thing to load.
		- you only do this when you are doing re-directs

==> Page redirection
		- 302 redirect
			-	HTTP 1.1/302 Found
			- Location: path
			- Header
				- header("Location: login.php")	
				- re-request is a second GET request.


====

Revise

1. loop inside a loop with continue - continue.php / lesson 045 towards the end
2. Scope global and local -functions_scope.php / lesson 52
